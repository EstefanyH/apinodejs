org: hache
service: mi-api-node

provider:
  name: aws
  runtime: nodejs20.x
  region: us-west-2
  stage: v1  # ✅ Cambia el stage de "dev" a "v1"
  environment:
    DYNAMODB_TABLE: FusionadosData
    API_GATEWAY_ID: ghu9xfcyr0 # Reemplázalo con el ID real
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: "arn:aws:dynamodb:us-west-2:*:table/FusionadosData"

functions:
  swagger:
    handler: src/handler.appHandler
    events:
      - http:
          path: /{proxy+}
          method: any
          cors: true

      - http:
          path: swagger.json
          method: get
          cors: true

  fusionados:
    handler: src/handler.fusionados
    events:
      - http:
          path: fusionados
          method: get

  almacenar:
    handler: src/handler.almacenar
    events:
      - http:
          path: almacenar
          method: post
          integration: lambda
          request:
            template:
              application/json: |
                {
                  "body": $input.json('$')
                }

  historial:
    handler: src/handler.historial
    events:
      - http:
          path: historial
          method: get

resources:
  Resources:
    FusionadosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: FusionadosData
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: expiresAt
          Enabled: true

plugins:
  - serverless-auto-swagger  # ✅ Plugin Swagger
  - serverless-dynamodb-local
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
  autoswagger:
    title: "API Fusionados"
    basePath: "/v1"  # ✅ Actualiza el prefijo en la documentación Swagger
    host: "http://localhost:3000"
    #generateSwaggerOnDeploy: true
    schemes: ["http"]
  serverless-offline:
    httpPort: 3000
    host: 0.0.0.0