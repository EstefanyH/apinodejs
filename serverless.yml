org: hache
service: mi-api-node

provider:
  name: aws
  runtime: nodejs20.x
  region: us-west-2
  environment:
    DYNAMODB_TABLE: FusionadosData
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: "arn:aws:dynamodb:us-west-2:123456789012:table/FusionadosData"

functions:
  fusionados:
    handler: src/handler.fusionados
    events:
      - httpApi:
          path: /fusionados
          method: get

  almacenar:
    handler: src/handler.almacenar
    events:
      - httpApi:
          path: /almacenar
          method: post

  historial:
    handler: src/handler.historial
    events:
      - httpApi:
          path: /historial
          method: get

  swagger:
    handler: src/handlers.swaggerHandler
    events:
      - httpApi:
          path: /swagger
          method: get
      - httpApi:
          path: /swagger.json
          method: get

resources:
  Resources:
    FusionadosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: FusionadosData
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: cacheKey
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: expiresAt
          Enabled: true

plugins:
  - serverless-auto-swagger  # âœ… Plugin Swagger
  - serverless-dynamodb-local
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
  autoswagger:
    title: "API Fusionados"
    basePath: "/dev"
    host: "http://localhost:3000"
    generateSwaggerOnDeploy: true
    schemes:
      - http
  serverless-offline:
    httpPort: 3000
    lambdaPort: 3002
    host: 0.0.0.0