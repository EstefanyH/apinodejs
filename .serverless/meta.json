{
  "/Users/valeria/Documents/App's/api-node/serverless.yml": {
    "versionFramework": "4.9.0",
    "servicePath": "/Users/valeria/Documents/App's/api-node/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "node-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-west-2",
        "environment": {
          "DYNAMODB_TABLE": "FusionadosData"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Scan",
              "dynamodb:PutItem"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:123456789012:table/FusionadosData"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "FusionadosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/node-api-dev-fusionados"
              }
            },
            "AlmacenarLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/node-api-dev-almacenar"
              }
            },
            "HistorialLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/node-api-dev-historial"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "node-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/node-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/node-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Scan",
                            "dynamodb:PutItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:123456789012:table/FusionadosData"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "node-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "FusionadosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
                  "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
                },
                "Handler": "handler.fusionados",
                "Runtime": "nodejs20.x",
                "FunctionName": "node-api-dev-fusionados",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "FusionadosData"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "FusionadosLogGroup"
              ]
            },
            "AlmacenarLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
                  "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
                },
                "Handler": "handler.almacenar",
                "Runtime": "nodejs20.x",
                "FunctionName": "node-api-dev-almacenar",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "FusionadosData"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AlmacenarLogGroup"
              ]
            },
            "HistorialLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
                  "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
                },
                "Handler": "handler.historial",
                "Runtime": "nodejs20.x",
                "FunctionName": "node-api-dev-historial",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "FusionadosData"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HistorialLogGroup"
              ]
            },
            "FusionadosLambdaVersionRNkzVYzS9Jwyv9s4hnrwlWkmqNocyNLbzNLotvuM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "FusionadosLambdaFunction"
                },
                "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
              }
            },
            "AlmacenarLambdaVersionupvoZ22iO6duoWX7TskTLW0auBbKpqkFYo3A38ltjg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AlmacenarLambdaFunction"
                },
                "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
              }
            },
            "HistorialLambdaVersionbc3tjXGVXBQ1jApa0m4YJnWy83K4Vv0ugUEx5ILQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HistorialLambdaFunction"
                },
                "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-node-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceFusionados": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "fusionados",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceAlmacenar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "almacenar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceHistorial": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "historial",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFusionadosGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFusionados"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "FusionadosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "FusionadosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodAlmacenarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceAlmacenar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AlmacenarLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AlmacenarLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodHistorialGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceHistorial"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "HistorialLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "HistorialLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1742187510588": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodFusionadosGet",
                "ApiGatewayMethodAlmacenarPost",
                "ApiGatewayMethodHistorialGet"
              ]
            },
            "FusionadosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "FusionadosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AlmacenarLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AlmacenarLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "HistorialLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HistorialLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "FusionadosTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "FusionadosData",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-west-2-484ada10-f386",
              "Export": {
                "Name": "sls-node-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "FusionadosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "FusionadosLambdaVersionRNkzVYzS9Jwyv9s4hnrwlWkmqNocyNLbzNLotvuM"
              },
              "Export": {
                "Name": "sls-node-api-dev-FusionadosLambdaFunctionQualifiedArn"
              }
            },
            "AlmacenarLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AlmacenarLambdaVersionupvoZ22iO6duoWX7TskTLW0auBbKpqkFYo3A38ltjg"
              },
              "Export": {
                "Name": "sls-node-api-dev-AlmacenarLambdaFunctionQualifiedArn"
              }
            },
            "HistorialLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HistorialLambdaVersionbc3tjXGVXBQ1jApa0m4YJnWy83K4Vv0ugUEx5ILQ"
              },
              "Export": {
                "Name": "sls-node-api-dev-HistorialLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-node-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "fusionados": {
          "handler": "handler.fusionados",
          "events": [
            {
              "http": {
                "path": "fusionados",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "node-api-dev-fusionados",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "FusionadosLambdaVersionRNkzVYzS9Jwyv9s4hnrwlWkmqNocyNLbzNLotvuM"
        },
        "almacenar": {
          "handler": "handler.almacenar",
          "events": [
            {
              "http": {
                "path": "almacenar",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "node-api-dev-almacenar",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "AlmacenarLambdaVersionupvoZ22iO6duoWX7TskTLW0auBbKpqkFYo3A38ltjg"
        },
        "historial": {
          "handler": "handler.historial",
          "events": [
            {
              "http": {
                "path": "historial",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "node-api-dev-historial",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "HistorialLambdaVersionbc3tjXGVXBQ1jApa0m4YJnWy83K4Vv0ugUEx5ILQ"
        }
      },
      "resources": {
        "Resources": {
          "FusionadosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "FusionadosData",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      },
      "plugins": [
        "serverless-offline",
        "serverless-dynamodb-local"
      ],
      "custom": {
        "serverless-offline": {
          "httpPort": 3000,
          "lambdaPort": 3002,
          "host": "0.0.0.0"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "us-west-2",
      "environment": {
        "DYNAMODB_TABLE": "FusionadosData"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Scan",
            "dynamodb:PutItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:123456789012:table/FusionadosData"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "FusionadosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/node-api-dev-fusionados"
            }
          },
          "AlmacenarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/node-api-dev-almacenar"
            }
          },
          "HistorialLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/node-api-dev-historial"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "node-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/node-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/node-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Scan",
                          "dynamodb:PutItem"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-1:123456789012:table/FusionadosData"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "node-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "FusionadosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
                "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
              },
              "Handler": "handler.fusionados",
              "Runtime": "nodejs20.x",
              "FunctionName": "node-api-dev-fusionados",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "FusionadosData"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FusionadosLogGroup"
            ]
          },
          "AlmacenarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
                "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
              },
              "Handler": "handler.almacenar",
              "Runtime": "nodejs20.x",
              "FunctionName": "node-api-dev-almacenar",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "FusionadosData"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AlmacenarLogGroup"
            ]
          },
          "HistorialLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
                "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
              },
              "Handler": "handler.historial",
              "Runtime": "nodejs20.x",
              "FunctionName": "node-api-dev-historial",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "FusionadosData"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HistorialLogGroup"
            ]
          },
          "FusionadosLambdaVersionRNkzVYzS9Jwyv9s4hnrwlWkmqNocyNLbzNLotvuM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FusionadosLambdaFunction"
              },
              "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
            }
          },
          "AlmacenarLambdaVersionupvoZ22iO6duoWX7TskTLW0auBbKpqkFYo3A38ltjg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AlmacenarLambdaFunction"
              },
              "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
            }
          },
          "HistorialLambdaVersionbc3tjXGVXBQ1jApa0m4YJnWy83K4Vv0ugUEx5ILQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HistorialLambdaFunction"
              },
              "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-node-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceFusionados": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fusionados",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAlmacenar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "almacenar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceHistorial": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "historial",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFusionadosGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFusionados"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FusionadosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FusionadosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAlmacenarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAlmacenar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AlmacenarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AlmacenarLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodHistorialGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHistorial"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HistorialLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "HistorialLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1742187510588": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodFusionadosGet",
              "ApiGatewayMethodAlmacenarPost",
              "ApiGatewayMethodHistorialGet"
            ]
          },
          "FusionadosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FusionadosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AlmacenarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AlmacenarLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HistorialLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HistorialLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FusionadosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "FusionadosData",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-west-2-484ada10-f386",
            "Export": {
              "Name": "sls-node-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "FusionadosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FusionadosLambdaVersionRNkzVYzS9Jwyv9s4hnrwlWkmqNocyNLbzNLotvuM"
            },
            "Export": {
              "Name": "sls-node-api-dev-FusionadosLambdaFunctionQualifiedArn"
            }
          },
          "AlmacenarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AlmacenarLambdaVersionupvoZ22iO6duoWX7TskTLW0auBbKpqkFYo3A38ltjg"
            },
            "Export": {
              "Name": "sls-node-api-dev-AlmacenarLambdaFunctionQualifiedArn"
            }
          },
          "HistorialLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HistorialLambdaVersionbc3tjXGVXBQ1jApa0m4YJnWy83K4Vv0ugUEx5ILQ"
            },
            "Export": {
              "Name": "sls-node-api-dev-HistorialLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-node-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "# serverless.yml\nservice: node-api\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  region: us-west-2\n  environment:\n    DYNAMODB_TABLE: FusionadosData\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Scan\n        - dynamodb:PutItem\n      Resource: \"arn:aws:dynamodb:us-east-1:123456789012:table/FusionadosData\"\n\nfunctions:\n  fusionados:\n    handler: handler.fusionados\n    events:\n      - http:\n          path: fusionados\n          method: get\n  almacenar:\n    handler: handler.almacenar\n    events:\n      - http:\n          path: almacenar\n          method: post\n  historial:\n    handler: handler.historial\n    events:\n      - http:\n          path: historial\n          method: get\n\nresources:\n  Resources:\n    FusionadosTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: FusionadosData\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        BillingMode: PAY_PER_REQUEST\n\n\n# Agregar plugins\nplugins:\n  - serverless-offline\n  - serverless-dynamodb-local\n\n# Configurar Serverless Offline\ncustom:\n  serverless-offline:\n    httpPort: 3000  # Cambia el puerto si es necesario\n    lambdaPort: 3002\n    host: 0.0.0.0  # Escucha en todas las interfaces de red\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "f262b6e2-76d1-43f9-8433-3d7334bd3582",
    "orgName": "hache",
    "userId": "RsQJHq7HrZLk0Q8xzw",
    "userName": "hache",
    "serviceProviderAwsAccountId": "001026243728",
    "serviceProviderAwsCfStackName": "node-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-west-2:001026243728:stack/node-api-dev/92cd7080-02ec-11f0-95e6-0ae1d4c70b17",
    "serviceProviderAwsCfStackCreated": "2025-03-17T04:59:14.872Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "HistorialLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:001026243728:function:node-api-dev-historial:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-node-api-dev-HistorialLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "FusionadosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:001026243728:function:node-api-dev-fusionados:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-node-api-dev-FusionadosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AlmacenarLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-2:001026243728:function:node-api-dev-almacenar:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-node-api-dev-AlmacenarLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://7pgruos7lc.execute-api.us-west-2.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-node-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-west-2-484ada10-f386",
        "ExportName": "sls-node-api-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "FusionadosLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/node-api-dev-fusionados"
          }
        },
        "AlmacenarLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/node-api-dev-almacenar"
          }
        },
        "HistorialLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/node-api-dev-historial"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "node-api",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/node-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/node-api-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Scan",
                        "dynamodb:PutItem"
                      ],
                      "Resource": "arn:aws:dynamodb:us-east-1:123456789012:table/FusionadosData"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "node-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "FusionadosLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
              "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
            },
            "Handler": "handler.fusionados",
            "Runtime": "nodejs20.x",
            "FunctionName": "node-api-dev-fusionados",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "DYNAMODB_TABLE": "FusionadosData"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "FusionadosLogGroup"
          ]
        },
        "AlmacenarLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
              "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
            },
            "Handler": "handler.almacenar",
            "Runtime": "nodejs20.x",
            "FunctionName": "node-api-dev-almacenar",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "DYNAMODB_TABLE": "FusionadosData"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "AlmacenarLogGroup"
          ]
        },
        "HistorialLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-2-484ada10-f386",
              "S3Key": "serverless/node-api/dev/1742187538317-2025-03-17T04:58:58.317Z/node-api.zip"
            },
            "Handler": "handler.historial",
            "Runtime": "nodejs20.x",
            "FunctionName": "node-api-dev-historial",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "DYNAMODB_TABLE": "FusionadosData"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "HistorialLogGroup"
          ]
        },
        "FusionadosLambdaVersionRNkzVYzS9Jwyv9s4hnrwlWkmqNocyNLbzNLotvuM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "FusionadosLambdaFunction"
            },
            "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
          }
        },
        "AlmacenarLambdaVersionupvoZ22iO6duoWX7TskTLW0auBbKpqkFYo3A38ltjg": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "AlmacenarLambdaFunction"
            },
            "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
          }
        },
        "HistorialLambdaVersionbc3tjXGVXBQ1jApa0m4YJnWy83K4Vv0ugUEx5ILQ": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "HistorialLambdaFunction"
            },
            "CodeSha256": "JVAq83IOH7r9q8u7D0szSYmJ83OGd+YrLasiy06lV50="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-node-api",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceFusionados": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "fusionados",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceAlmacenar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "almacenar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceHistorial": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "historial",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFusionadosGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFusionados"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "FusionadosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "FusionadosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodAlmacenarPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceAlmacenar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AlmacenarLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "AlmacenarLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodHistorialGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceHistorial"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "HistorialLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "HistorialLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1742187510588": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodFusionadosGet",
            "ApiGatewayMethodAlmacenarPost",
            "ApiGatewayMethodHistorialGet"
          ]
        },
        "FusionadosLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "FusionadosLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "AlmacenarLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "AlmacenarLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "HistorialLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "HistorialLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "FusionadosTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "FusionadosData",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-west-2-484ada10-f386",
          "Export": {
            "Name": "sls-node-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "FusionadosLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "FusionadosLambdaVersionRNkzVYzS9Jwyv9s4hnrwlWkmqNocyNLbzNLotvuM"
          },
          "Export": {
            "Name": "sls-node-api-dev-FusionadosLambdaFunctionQualifiedArn"
          }
        },
        "AlmacenarLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "AlmacenarLambdaVersionupvoZ22iO6duoWX7TskTLW0auBbKpqkFYo3A38ltjg"
          },
          "Export": {
            "Name": "sls-node-api-dev-AlmacenarLambdaFunctionQualifiedArn"
          }
        },
        "HistorialLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "HistorialLambdaVersionbc3tjXGVXBQ1jApa0m4YJnWy83K4Vv0ugUEx5ILQ"
          },
          "Export": {
            "Name": "sls-node-api-dev-HistorialLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-node-api-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}