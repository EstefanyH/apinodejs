{
  "/Users/valeria/Documents/App's/api-node/serverless.yml": {
    "versionFramework": "4.9.0",
    "servicePath": "/Users/valeria/Documents/App's/api-node/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "hache",
      "service": "mi-api-node",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-west-2",
        "environment": {
          "DYNAMODB_TABLE": "FusionadosData"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Scan",
              "dynamodb:PutItem",
              "dynamodb:GetItem"
            ],
            "Resource": "arn:aws:dynamodb:us-west-2:123456789012:table/FusionadosData"
          }
        ],
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "fusionados": {
          "handler": "src/handler.fusionados",
          "events": [
            {
              "http": {
                "path": "/fusionados",
                "method": "get"
              }
            }
          ],
          "name": "mi-api-node-dev-fusionados"
        },
        "almacenar": {
          "handler": "src/handler.almacenar",
          "events": [
            {
              "http": {
                "path": "/almacenar",
                "method": "post"
              }
            }
          ],
          "name": "mi-api-node-dev-almacenar"
        },
        "historial": {
          "handler": "src/handler.historial",
          "events": [
            {
              "http": {
                "path": "/historial",
                "method": "get"
              }
            }
          ],
          "name": "mi-api-node-dev-historial"
        },
        "swagger": {
          "handler": "src/handler.swaggerUI",
          "events": [
            {
              "http": {
                "path": "api-docs",
                "method": "get"
              }
            }
          ],
          "name": "mi-api-node-dev-swagger"
        }
      },
      "resources": {
        "Resources": {
          "FusionadosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "FusionadosData",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "cacheKey",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TimeToLiveSpecification": {
                "AttributeName": "expiresAt",
                "Enabled": true
              }
            }
          }
        }
      },
      "plugins": [
        "serverless-auto-swagger",
        "serverless-dynamodb-local",
        "serverless-offline"
      ],
      "custom": {
        "esbuild": {
          "bundle": true,
          "minify": false,
          "sourcemap": true
        },
        "autoswagger": {
          "title": "API Fusionados",
          "basePath": "/dev",
          "host": "http://localhost:3000",
          "generateSwaggerOnDeploy": true,
          "schemes": [
            "http"
          ]
        },
        "serverless-offline": {
          "httpPort": 3000,
          "lambdaPort": 3002,
          "host": "0.0.0.0"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "us-west-2",
      "environment": {
        "DYNAMODB_TABLE": "FusionadosData"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Scan",
            "dynamodb:PutItem",
            "dynamodb:GetItem"
          ],
          "Resource": "arn:aws:dynamodb:us-west-2:123456789012:table/FusionadosData"
        }
      ],
      "stage": "dev",
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "Build failed with 1 error:\nsrc/server.ts:2:17: ERROR: Could not resolve \"cors\"",
      "stack": "ServerlessError2: Build failed with 1 error:\nsrc/server.ts:2:17: ERROR: Could not resolve \"cors\"\n    at Esbuild._build (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:800:15833)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async before:offline:start (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:800:4645)\n    at async PluginManager.runHooks (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:809:9546)\n    at async PluginManager.invoke (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:809:10256)\n    at async PluginManager.run (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:809:11044)\n    at async Serverless.run (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:816:10520)\n    at async runFramework (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:843:1775)\n    at async TraditionalRunner.run (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:839:28308)\n    at async route (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:877:2779)\n    at async Object.run (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:878:3661)\n    at async run2 (file:///Users/valeria/.serverless/releases/4.9.0/package/dist/sf-core.js:878:4814)",
      "code": "ESBULD_BUILD_ERROR"
    },
    "serviceRawFile": "org: hache\nservice: mi-api-node\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  region: us-west-2\n  environment:\n    DYNAMODB_TABLE: FusionadosData\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Scan\n        - dynamodb:PutItem\n        - dynamodb:GetItem\n      Resource: \"arn:aws:dynamodb:us-west-2:123456789012:table/FusionadosData\"\n\nfunctions:\n  fusionados:\n    handler: src/handler.fusionados\n    events:\n      - http:\n          path: /fusionados\n          method: get\n\n  almacenar:\n    handler: src/handler.almacenar\n    events:\n      - http:\n          path: /almacenar\n          method: post\n\n  historial:\n    handler: src/handler.historial\n    events:\n      - http:\n          path: /historial\n          method: get\n\n  swagger:\n    handler: src/handler.swaggerUI\n    events:\n      - http:\n          path: api-docs\n          method: get\n\nresources:\n  Resources:\n    FusionadosTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: FusionadosData\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n          - AttributeName: cacheKey\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        BillingMode: PAY_PER_REQUEST\n        TimeToLiveSpecification:\n          AttributeName: expiresAt\n          Enabled: true\n\nplugins:\n  - serverless-auto-swagger  # âœ… Plugin Swagger\n  - serverless-dynamodb-local\n  - serverless-offline\n\ncustom:\n  esbuild:\n    bundle: true\n    minify: false\n    sourcemap: true\n  autoswagger:\n    title: \"API Fusionados\"\n    basePath: \"/dev\"\n    host: \"http://localhost:3000\"\n    generateSwaggerOnDeploy: true\n    schemes:\n      - http\n  serverless-offline:\n    httpPort: 3000\n    lambdaPort: 3002\n    host: 0.0.0.0",
    "command": [
      "offline"
    ],
    "options": {},
    "orgId": "f262b6e2-76d1-43f9-8433-3d7334bd3582",
    "orgName": "hache",
    "userId": "RsQJHq7HrZLk0Q8xzw",
    "userName": "hache",
    "serviceProviderAwsAccountId": "001026243728",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}